<?php
class SecurityKey {
	
	//constructor
	public function __construct($monthOfYear){
            $this->monthOfYear = $monthOfYear;
	}

	function getMonthOfYear() {
		return $this->monthOfYear;
	}

	// Vary between 0 and 11
	function setMonthOfYear($monthOfYear) {
		$this->monthOfYear = $monthOfYear;
	}

	public function getKREYVIUM_SECRET_KEY() {
		return $this->KREYVIUM_SECRET_KEY[$this->monthOfYear];
	}

	public function getKreyviemSecretKeys() {
		return $this->KREYVIUM_SECRET_KEY;
	}
	
	private $monthOfYear; 
			
	/**
	 * Krevium Private Key
	 * ** DO NOT MODIFY IT *** 
	 */
	private $KREYVIUM_SECRET_KEY = array(  
		/*January*/
		array (
			0,1,1, 0,1,1,0,0,0, 0,1, 0,1, 1,1,1,
			1, 0,1, 0,1,1,1, 1,1,1,1,0,1,1,0, 1,
			1, 0,1, 0,1, 1,1, 1,1, 0,1,1,0, 1,1,
			1,1, 0,1, 0,1,1,1,1,1, 0,1,1,0, 0,1,
			1,0, 0,1, 0,1,1,1,1,1, 0,1, 0,1,1,1,
			1,0, 0,1, 0,0,1,0,1,1,0,1, 0,1,1,0,1,
			1, 0,1, 0,1,1,1,1,1,0,1, 0,1,1,1,0,0,
			0,1, 0,1, 1,1, 1,1, 0,1, 0,1,1,1,0
		),
		/*Febury*/
		array (
				1,0, 0, 0,1,1,0,1,0, 1,1, 0,1, 1,1, 1,1, 0,1, 0,1, 1,1, 1,1,
				1,1, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				1,1, 1,1, 1,1, 0,1, 0,1,1,1,1,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 0,1,	
				1,1,1,0, 0,1, 0,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 0,1, 1,1, 1,1, 0,1, 0,1,	1,1, 0
			),
		/*March*/
		array (
				1,0, 1, 0,0,0,0,1,0, 1,1, 0,1, 1,1, 1,1, 0,1, 0,1, 1,1, 1,1,
				1,1, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				0,1, 1,1, 1,1, 0,1, 0,1,1,1,1,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 0,1,	
				1,1,0,0, 0,1, 0,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 1,1, 1,1, 1,1, 0,1, 0,1,	1,1, 1
			),
		/*April*/
		array(
				0,1, 1, 1,1,0,0,1,0, 1,1, 0,1, 1,1, 1,1, 0,1, 0,1, 1,1, 0,0,
				1,1, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				1,1, 1,1, 1,1, 0,1, 0,1,1,1,1,1, 0,1,
				0,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 0,1,	
				1,0,1,0, 0,1, 1,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 0,1, 0,0, 1,0, 0,1, 0,1,	1,1, 0
			),
		/*May*/
		array(
				1,0, 0, 0,1,1,0,1,1, 1,1, 1,1, 1,1, 1,1, 0,1, 0,1, 1,1, 1,1,
				1,1, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				0,1, 0,0, 1,1, 0,1, 0,1,1,0,1,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 0,1,	
				0,1,1,0, 0,1, 0,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 0,1, 1,0, 1,0, 0,1, 0,1,	1,1, 0
			),
		/*June*/
		array(
				1,0, 0, 0,1,1,0,1,0, 1,1, 0,1, 1,1, 1,1, 0,1, 0,1, 1,1, 1,1,
				0,0, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				1,0, 1,1, 1,1, 0,1, 0,1,1,1,1,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 0,1,	
				1,1,1,0, 0,1, 0,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 0,1, 1,1, 0,1, 0,1, 0,1,	1,1, 0
			),
		/*July*/
		array(
				1,0, 0, 0,1,0,0,1,0, 1,1, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1,
				1,1, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				1,1, 1,1, 1,1, 0,1, 0,1,1,0,1,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 0,1,	
				0,1,1,0, 0,1, 0,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,0,1,
				0,0, 0,1, 0,0, 1,1, 1,1, 0,1, 0,1,	1,1, 0
			),
		/*August*/
		array(
				1,0, 0, 0,1,1,0,1,0, 1,1, 0,1, 1,1, 1,1, 0,1, 0,1, 1,1, 1,1,
				1,1, 0,1, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				0,1, 1,1, 1,1, 0,1, 0,1,1,0,1,0, 1,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 1,1, 0,1,	
				0,1,1,0, 0,1, 1,0,	1,0,1,1,0,1, 1,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 0,1, 1,1, 1,1, 0,1, 0,1,	1,1, 0
			),
		/*September*/
		array(
				0,0, 0,0, 1,1,0,1,0, 1,1, 0,1, 1,1, 1,1, 0,1, 0,1, 1,1, 1,1,
				1,1, 0,0, 1,0, 1,1, 0,1, 0,1, 1,1, 1,1, 0,1,
				0,1, 1,0, 1,1, 0,1, 1,0,1,1,0,1, 0,1,
				1,0, 0,1, 1,0, 0,0, 0,0,1,0,1,1, 0,1, 0,1,	
				1,0, 1,0, 0,1, 1,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 0,1, 1,1, 1,1, 0,1, 0,1,	1,1, 0
			),
		/*October*/
		array(
				0,0, 0, 0,1,1,0,1,0, 1,1, 0,1, 1,1, 1,1, 0,1, 0,1, 1,1, 1,1,
				0,1, 0,1, 1,0, 1,1, 1,1, 0,1, 1,1, 1,1, 0,1,
				0,1, 1,1, 1,1, 0,1, 0,1,1,1,0,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 0,1,	
				1,1, 0,0, 0,1, 0,0,	1,0,1,1,0,1, 1,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				0,0, 0,1, 0,1, 1,1, 1,1, 0,1, 0,1,	0,1, 1
			),
		/*November*/
		array(
				0,0, 1, 1,1,1,0,1,0, 1,1, 0,1, 1,1, 1,1, 1,1, 0,1, 1,1, 1,1,
				1,1, 0,1, 1,0, 1,0, 0,1, 0,1, 1,1, 1,1, 0,1,
				0,1, 1,1, 0,1, 0,1, 0,1,1,0,1,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,0,1,1, 0,1, 1,1,	
				1,1, 0,0, 0,1, 0,0,	1,0,1,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	1,1,1,1,0,1, 0,1,1,1,
				1,1, 0,1, 0,1, 1,1, 0,0, 1,1, 0,1,	1,1, 0
			),
		/*December*/
		array(
				1,0, 0, 0,1,0,0,1,0, 1,1, 0,1, 0,1, 0,1, 0,1, 0,1, 1,0, 0,1,
				0,0, 0,1, 1,0, 0,1, 0,1, 0,1, 1,0, 1,1, 0,1,
				1,1, 1,1, 0,1, 1,0, 0,1,1,1, 0,1, 0,1,
				1,0, 0,1, 1,0, 0,1, 0,0,1,   0,1,1, 0,1, 0,1,	
				1,1, 1,0, 0,1, 1,0,	1,1,0,1,0,1, 0,1,1,0,1,1, 0,1, 0,1,	0,1,0,1,0,1, 0,1,0,1,
				0,0, 0,1, 0,1, 0,1, 1,1, 0,1, 0,1,	1,1, 0
			)
		
	);
	
	public function print2DemensionArray($tmpArray) {
		for($r=0;$r<count($tmpArray);$r++)
{
			for($c=0;$c<count($tmpArray[$r]);$c++)
			{
				echo $tmpArray[$r][$c]."   ";
			}
			echo "<br>";
		}
	}
	
	public function print1DemensionArray($tmpArray, $index) {
		for($r=0;$r<count($tmpArray[$index]);$r++) {
			echo $tmpArray[$index][$r]."   ";
		}
	}
	
	public function printArray($array) {
		for ($i = 0; $i < count($array); $i++) {
			echo $array[$i] + "<br>";
		}
	}
	
	// Test: 1 thang, 3 bytes.
}

?>